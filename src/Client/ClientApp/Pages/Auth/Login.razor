@page "/auth/login"
@inject AuthService Auth
@inject NavigationManager Nav

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}

<EditForm Model="_model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email</label>
        <InputText @bind-Value="_model.Email" />
    </div>
    <div>
        <label>Password</label>
        <input type="password" @bind="_model.Password" />
    </div>

    <button type="submit">Login</button>
</EditForm>

@code {
    private SharedDtos.LoginRequest _model = new();
    private string ErrorMessage = "";

    private async Task HandleLogin()
    {
        var ok = await Auth.LoginAsync(_model);
        if (ok)
        {
            // AuthStateProvider auto-updates via TokenState.
            Nav.NavigateTo("/profile");
        }
        else
        {
            ErrorMessage = "Invalid login attempt";
        }
    }
}
